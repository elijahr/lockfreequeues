SPSCQueueInterface	lockfreequeues/spscqueueinterface.html#SPSCQueueInterface	spscqueueinterface: SPSCQueueInterface	
index	lockfreequeues/spscqueueinterface.html#index,uint,uint	spscqueueinterface: index(value: uint; capacity: uint): uint	
size	lockfreequeues/spscqueueinterface.html#size,uint,uint	spscqueueinterface: size(head: uint; tail: uint): uint	
size	lockfreequeues/spscqueueinterface.html#size,SPSCQueueInterface	spscqueueinterface: size(self: var SPSCQueueInterface): uint	
available	lockfreequeues/spscqueueinterface.html#available,uint,uint,uint	spscqueueinterface: available(head: uint; tail: uint; capacity: uint): uint	
available	lockfreequeues/spscqueueinterface.html#available,SPSCQueueInterface,uint	spscqueueinterface: available(self: var SPSCQueueInterface; capacity: uint): uint	
full	lockfreequeues/spscqueueinterface.html#full,uint,uint,uint	spscqueueinterface: full(head: uint; tail: uint; capacity: uint): bool	
empty	lockfreequeues/spscqueueinterface.html#empty,uint,uint	spscqueueinterface: empty(head: uint; tail: uint): bool	
push	lockfreequeues/spscqueueinterface.html#push,SPSCQueueInterface,ptr.UncheckedArray[T],int,openArray[T]	spscqueueinterface: push[T](self: var SPSCQueueInterface; storage: var ptr UncheckedArray[T];\n        capacity: int; items: openArray[T]): Option[seq[T]]	
push	lockfreequeues/spscqueueinterface.html#push,SPSCQueueInterface,array[N,T],openArray[T]	spscqueueinterface: push[N: static int; T](self: var SPSCQueueInterface; storage: var array[N, T];\n                    items: openArray[T]): Option[seq[T]]	
pop	lockfreequeues/spscqueueinterface.html#pop,SPSCQueueInterface,ptr.UncheckedArray[T],int,int	spscqueueinterface: pop[T](self: var SPSCQueueInterface; storage: var ptr UncheckedArray[T]; capacity: int;\n       count: int): Option[seq[T]]	
pop	lockfreequeues/spscqueueinterface.html#pop,SPSCQueueInterface,array[N,T],int	spscqueueinterface: pop[N: static int; T](self: var SPSCQueueInterface; storage: var array[N, T]; count: int): Option[\n    seq[T]]	
state	lockfreequeues/spscqueueinterface.html#state,SPSCQueueInterface	spscqueueinterface: state(self: var SPSCQueueInterface): tuple[head: uint, tail: uint]	
move	lockfreequeues/spscqueueinterface.html#move,SPSCQueueInterface,uint,uint	spscqueueinterface: move(self: var SPSCQueueInterface; head: uint; tail: uint)	
